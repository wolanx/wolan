server {
    listen       80;
    listen       [::]:80;
    server_name  www.{{.Domain}} {{.Domain}};

    location /.well-known/acme-challenge {
        root {{.SiteRoot}}/{{.Domain}}/public;
    }
	
    #location / {
    #    return 302 https://{{.Domain}}$request_uri;
    #}
}
{{if .WithSSL}}
server {
    listen       443 ssl http2;
    listen       [::]:443 ssl http2;
    server_name  www.{{.Domain}} {{.Domain}};

    ssl_certificate {{.SiteRoot}}/{{.Domain}}/conf/fullchain.rsa.pem;
    ssl_certificate_key {{.SiteRoot}}/{{.Domain}}/conf/privkey.rsa.pem;
    ssl_certificate {{.SiteRoot}}/{{.Domain}}/conf/fullchain.ecdsa.pem;
    ssl_certificate_key {{.SiteRoot}}/{{.Domain}}/conf/privkey.ecdsa.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets on;
    ssl_session_ticket_key {{.SiteRoot}}/conf/ticket.pem;

    ssl_dhparam {{.SiteRoot}}/conf/dhparam.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;
	
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate {{.SiteRoot}}/{{.Domain}}/conf/ocsp.pem;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
	
    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log  main;

    #if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$ ) {
    #    return 444;
    #}

    #if ($host != '{{.Domain}}' ) {
    #    rewrite ^/(.*)$  https://{{.Domain}}/$1 permanent;
    #}

    location / {
        root   {{.SiteRoot}}/{{.Domain}}/public;
        index  index.html;

        location ~* \.(ico|css|js|gif|jpe?g|png|swf)(\?[0-9]+)?$ {
            expires 86400;
            log_not_found off;
        }

        expires 300;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
{{- end}}